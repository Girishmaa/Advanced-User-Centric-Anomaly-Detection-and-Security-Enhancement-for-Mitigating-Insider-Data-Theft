# -*- coding: utf-8 -*-
"""USER BEHAVIOUR ANOMALY DETECTION

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NcMx2_-2MdgpuwHA4OHAliRLw6Vlp8aK
"""

import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from sklearn.ensemble import IsolationForest
import pandas as pd

# Load your dataset
data = pd.read_csv("User1.csv")

# Define threshold values
typing_speed_threshold = (30, 80)
error_count_threshold = 10
session_duration_threshold = (15, 90)

# Prepare the data for anomaly detection
features = data[["Typing_Speed_(WPM)", "Error_Count", "Session_Duration_(minutes)"]]
data.rename(columns={
    "Typing_Speed_(WPM)": "Typing_Speed_WPM",
    "Session_Duration_(minutes)": "Session_Duration_minutes"
}, inplace=True)

# Initialize the Isolation Forest model
isolation_forest = IsolationForest(contamination=0.05, random_state=42) # Adjust the contamination parameter as needed

# Fit the model to the data
isolation_forest.fit(features)

# Predict anomalies
predictions = isolation_forest.predict(features)

# Create a DataFrame with anomalies (you can modify this to suit your data)
anomaly_data = pd.DataFrame({
    "Typing_Speed_WPM": [10, 15, 5],
    "Error_Count": [20, 25, 30],
    "Session_Duration_minutes": [50, 55, 60]
})

# Append the anomalies to the existing data
data = data.append(anomaly_data, ignore_index=True)

# Detect anomalies based on threshold values
anomalies = (
    (data["Typing_Speed_WPM"] < typing_speed_threshold[0]) |
    (data["Typing_Speed_WPM"] > typing_speed_threshold[1]) |
    (data["Error_Count"] > error_count_threshold) |
    (data["Session_Duration_minutes"] < session_duration_threshold[0]) |
    (data["Session_Duration_minutes"] > session_duration_threshold[1])
)

# Display or take actions on detected anomalies
detected_anomalies = data[anomalies]

# Check for anomalies and generate alerts
if detected_anomalies.shape[0] > 0:
    # Prepare the email content
    sender_email = "girishmaa1204@gmail.com"
    email_password = "pfeh opuf inpv wklu"
    recipient_email = "gvgirishmaa@gmail.com"

    # Create the email content as an HTML string
    html_content = """
    <!DOCTYPE html>
    <html>
    <head>
        <title>Anomaly Detected</title>
    </head>
    <body>
        <h1>Suspicious Activity Detected</h1>
        <button id="allowButton" onclick="handleInteraction('Allow')">Allow</button>
        <button id="blockButton" onclick="handleInteraction('Block')">Block</button>
        <script>
            function handleInteraction(action) {
                alert('You clicked the "' + action + '" button!');
            }
        </script>
    </body>
    </html>
    """

    # Create the email message
    message = MIMEMultipart()
    message["From"] = sender_email
    message["To"] = recipient_email
    message["Subject"] = "Anomaly Detected in User Data"

    # Attach the HTML content
    message.attach(MIMEText(html_content, "html"))

    # Connect to Gmail's SMTP server
    smtp_server = "smtp.gmail.com"
    smtp_port = 587

    server = smtplib.SMTP(smtp_server, smtp_port)
    server.starttls()

    # Login to your Gmail account
    server.login(sender_email, email_password)

    # Send the email
    server.sendmail(sender_email, recipient_email, message.as_string())

    # Quit the server
    server.quit()

    print("Email alert sent successfully.")
else:
    print("No anomalies detected.")